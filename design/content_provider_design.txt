====CONTENT PROVIDER DESIGN INFORMATION====

This is a in-progress document that will be updated as the ContentProvider evolves.

====INTERACTION====

Recent / all shouts (timeline)
My Shouts (e.g. shouts by user)
Shouts by user
User by ID

====URI STRUCTURE====

AUTHORITY/shouts
AUTHORITY/shouts/#
AUTHORITY/shouts/user/#
AUTHORITY/shouts/tag/#
AUTHORITY/tags
AUTHORITY/tags/shout/#
AUTHORITY/tags/#
AUTHORITY/users
AUTHORITY/users/#

====DATABASE DESIGN====

5 tables in the database
In every table, the primary key column has the name "_ID" in order to maintain
compatibility with automatically populating ListViews.

--User_Shouts--
_ID (PK), Shout_ID (FK), Reshout_ID (FK or null)

--Shout--
_ID (PK), User_ID (FK), Content, Date

--Tag--
_ID (PK), Name

--Tag_Assignment--
_ID (PK), Tag_ID (FK), Shout_ID (FK)

--User--
_ID (PK), Public_Key, Username

====CURRENT CREATE TABLE COMMANDS====

CREATE TABLE User
(
    _ID INT NOT NULL PRIMARY KEY ASC AUTOINCREMENT,
    Public_Key VARCHAR(16) UNIQUE,
    Username VARCHAR(16)
);
CREATE TABLE Shout
(
    _ID INT PRIMARY KEY NOT NULL ASC AUTOINCREMENT,
    User_ID INT,
    FOREIGN KEY(User_ID) REFERENCES `User(_ID)`,
    Content VARCHAR(140),
    Date VARCHAR(19)
);
CREATE TABLE Tag
(
    _ID INT NOT NULL PRIMARY KEY ASC AUTOINCREMENT,
    Name VARCHAR(139)
);
CREATE TABLE Tag_Assignment
(
    _ID INT NOT NULL PRIMARY KEY ASC AUTOINCREMENT,
    Tag_ID INT NOT NULL,
    FOREIGN KEY(Tag_ID) REFERENCES Tag(_ID),
    Shout_ID INT NOT NULL,
    FOREIGN KEY(Shout_ID) REFERENCES Shout(_ID)
);
CREATE TABLE User_Shouts
(
    _ID INT NOT NULL PRIMARY KEY ASC AUTOINCREMENT,
    Shout_ID INT NOT NULL UNIQUE,
    FOREIGN KEY(Shout_ID) REFERENCES Shout(_ID),
    Reshout_ID INT,
    FOREIGN KEY(Reshout_ID) REFERENCES Shout(_ID)
);
   